"""""""""""""""""""""""""""""""""""""""""""""
" Vundle
"""""""""""""""""""""""""""""""""""""""""""""
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
" Plugin 'taglist.vim'
Plugin 'majutsushi/tagbar'
Plugin 'itchyny/vim-cursorword'
" Plugin 'vim-airline/vim-airline'
" Plugin 'autoload_cscope.vim'
Plugin 'fatih/vim-go'
" Plugin 'SirVer/ultisnips'    " if note UltiSnips requires py >= 2.7 or py3, apt install vim-gtk
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'airblade/vim-gitgutter'
Plugin 'ycm-core/YouCompleteMe'
Plugin 'jiangmiao/auto-pairs'
Plugin 'easymotion/vim-easymotion'
Plugin 'vim-airline/vim-airline'
Plugin 'terryma/vim-multiple-cursors'
" Plugin 'altercation/vim-colors-solarized'
Plugin 'fatih/molokai'
call vundle#end()
filetype plugin indent on

""""""""""""""""""""""""""""""""""""""""""""
" base setting
""""""""""""""""""""""""""""""""""""""""""""
syntax on
set nu
set smartindent
set shiftwidth=4
set tabstop=4
set hlsearch

""""""""""""""""""""""""""""""""""""""""""""
" theme setting
""""""""""""""""""""""""""""""""""""""""""""
set t_Co=256    " for vim-airline showing the right color
colorscheme molokai
"set background=dark
" let g:molokai_original=1
" let g:rehash256=1

"""""""""""""""""""""""""""""""""""""""""""
" extra setting
""""""""""""""""""""""""""""""""""""""""""""
set nocompatible	" Use Vim defaults (much better!)
""set bs=indent,eol,start		" allow backspacing over everything in insert mode
set bs=2
"set ai			" always set autoindenting on
"set backup		" keep a backup file
set viminfo='20,\"50	" read/write a .viminfo file, don't store more
			" than 50 lines of registers
set history=50		" keep 50 lines of command line history
" set tags=tags;
" set autochdir
set ruler
"set cc=81
"highlight ColorColumn ctermbg=7
autocmd FileType go match Underlined /\%>80v.*/

""""""""""""""""""""""""""""""""""""""""""""
" key mapping
""""""""""""""""""""""""""""""""""""""""""""
nnoremap <C-n> <ESC>:tab split<CR><C-]>
nnoremap <C-c> <ESC>:tabc<CR>
"inoremap ( ()<ESC>i
"inoremap [ []<ESC>i
"inoremap < <><ESC>i
"inoremap { {}<ESC>i
"inoremap <CR> <c-r>=EnterButton()<CR>
"inoremap ) <c-r>=ClosePair(')')<CR>
"inoremap } <c-r>=ClosePair('}')<CR>
"inoremap ] <c-r>=ClosePair(']')<CR>
"inoremap > <c-r>=ClosePair('>')<CR>
"inoremap " <c-r>=DealSemicolon('"')<CR>
"inoremap ' <c-r>=DealSemicolon("'")<CR>
"function! ClosePair(char)
"	if getline('.')[col('.') - 1] == a:char
"		return "\<Right>"
"	else
"		return a:char
"	endif
"endfunction
"function! DealSemicolon(char)
"	if getline('.')[col('.') - 1] == a:char
"		return "\<Right>"
"	else
"		return a:char.a:char."\<Left>"
"	endif
"endfunction
"function! EnterButton()
"	let curChar = getline('.')[col('.')-1]
"	if curChar == '}'
"		return "\<CR>\<ESC>O"
"	elseif curChar == ')'
"		return "\<CR>\<ESC>O\<Tab>"
"	else
"		return "\<CR>"
"	endif
"endfunction
""""""""""""""""""""""""""""""""""""""""""""
" note: the mapping above has been insteaded
"       by jiangmiao/auto
""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""
" Tag List
""""""""""""""""""""""""""""""""""""""""""""
"map <F1> <ESC>:TlistToggle<CR>
"let Tlist_Ctags_Cmd = '/usr/local/Cellar/ctags/5.8_1/bin/ctags'
"let Tlist_Show_One_File = 1
"let Tlist_Exit_OnlyWindow = 1
"let Tlist_Use_Right_Window = 0
"let Tlist_Auto_Open = 0
"let Tlist_Close_On_Select = 1

""""""""""""""""""""""""""""""""""""""""""""
" NERDTree
""""""""""""""""""""""""""""""""""""""""""""
map <F1> :NERDTreeToggle<CR>
let NERDTreeShowHidden = 1    "Show Hidden files
let NERDTreeIgnore = ['\.swp','\.swo']    "Don't Show Files
let NERDTreeQuitOnOpen = 1    "Close NERDTree when files was opened
let NERDTreeWinPos = 0    "Show on left by default
let NERDTreeShowBookmarks = 1    "Show BookMarks
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '-'

""""""""""""""""""""""""""""""""""""""""""""
" tagbar
""""""""""""""""""""""""""""""""""""""""""""
map <F2> :TagbarToggle<CR>
let g:tagbar_ctags_bin = '/usr/local/bin/ctags'
let g:tagbar_left = 1    "show tagbar on the left
let g:tagbar_width = 30    "set width instead 40
let g:tagbar_autofocus = 1    "auto focus
let g:tagbar_sort = 0    "sort use button s to switch
let g:tagbar_autoclose = 1    " auto close
let g:tagbar_type_go = {
\ 'ctagstype' : 'go',
\ 'kinds' : [
\ 'p:package',
\ 'i:imports:1',
\ 'c:constants',
\ 'v:variables',
\ 't:types',
\ 'n:interfaces',
\ 'w:fields',
\ 'e:embedded',
\ 'm:methods',
\ 'r:constructor',
\ 'f:functions'
\ ],
\ 'sro' : '.',
\ 'kind2scope' : {
\ 't' : 'ctype',
\ 'n' : 'ntype'
\ },
\ 'scope2kind' : {
\ 'ctype' : 't',
\ 'ntype' : 'n'
\ },
\ 'ctagsbin' : 'gotags',
\ 'ctagsargs' : '-sort -silent'
\ }

"""""""""""""""""""""""""""""""""""""""""""""
" show blank space
"""""""""""""""""""""""""""""""""""""""""""""
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
set list

"""""""""""""""""""""""""""""""""""""""""""""
" auto load cscope.out
"""""""""""""""""""""""""""""""""""""""""""""
if has("cscope") && filereadable("/usr/local/Cellar/cscope/15.9/bin/cscope")
   set csprg=/usr/local/Cellar/cscope/15.9/bin/cscope
   set csto=0
   set cst
   set nocsverb
   " add any database in current directory
   if filereadable("cscope.out")
      cs add $PWD/cscope.out
   " else add database pointed to by environment
   elseif $CSCOPE_DB != ""
      cs add $CSCOPE_DB
   endif
   set csverb
endif

"""""""""""""""""""""""""""""""""""""""""""""
" code setting
"""""""""""""""""""""""""""""""""""""""""""""
"if v:lang =~ "utf8$" || v:lang =~ "UTF-8$"
"   set fileencodings=ucs-bom,utf-8,latin1
"endif

"""""""""""""""""""""""""""""""""""""""""""""
" YouCompleteMe config
"""""""""""""""""""""""""""""""""""""""""""""
set completeopt=longest,menu    " same behavior with normal IDE
autocmd InsertLeave * if pumvisible() == 0|pclose|endif    " leave insert mode and close the preview window
let g:ycm_complete_in_comments = 1    " Complete in comments
let g:ycm_complete_in_strings = 1     " Complete in strings
let g:ycm_filetype_whitelist = {
			\ "go":1,
			\ "c":1,
			\ "cpp":1,
			\ "h":1,
			\ }
let g:ycm_global_ycm_extra_conf = "~/.vim/bundle/YouCompleteMe/third_party/ycmd/.ycm_extra_conf.py"
let g:ycm_show_diagnostics_ui = 0
let g:ycm_seed_identifiers_with_syntax = 1
let g:ycm_collect_identifiers_from_tags_files = 1    " start engine based on tags

"""""""""""""""""""""""""""""""""""""""""""""
" vim-go config
"""""""""""""""""""""""""""""""""""""""""""""
let g:go_fmt_command = "goimports"
let g:go_code_completion_enabled = 0
let g:go_auto_sameids = 1
let g:go_guru_scope = []

"""""""""""""""""""""""""""""""""""""""""""""
" easymotion config
"""""""""""""""""""""""""""""""""""""""""""""
let mapleader = ","

"""""""""""""""""""""""""""""""""""""""""""""
" vim-airline config
"""""""""""""""""""""""""""""""""""""""""""""
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline#extensions#tabline#buffer_nr_show = 1
let g:airline#extensions#tabline#buffer_nr_format = '[%s]'
let g:airline#extensions#tabline#tab_nr_type = 1
let g:airline#extensions#tabline#show_tab_count = 1
